parameters: 
- name: stageName
  default: ''
- name: environment
  default: ''
- name: azureSubscription
  default: ''
- name: resourceGroupName
  default: ''
- name: functionAppName
  default: ''
- name: storageAccountName
  default: ''
- name: cosmosDbAccountName
  default: ''
- name: logAnalyticsWorkspaceName
  default: ''
- name: region
  default: ''
- name: packageName
  default: ''  

stages:
  - stage: ${{ parameters.stageName }}
    displayName: ${{ parameters.stageName }}

    jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: ${{ parameters.environment }}
      pool:
        vmImage: 'ubuntu-latest'
  
      strategy:
        runOnce:
          deploy:
  
            steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                targetPath: '$(Pipeline.Workspace)/build'

            - task: AzureCLI@2
              displayName: '1. Deploy Azure Resources'
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az group create --name ${{ parameters.resourceGroupName }} --location ${{ parameters.region }}
                  az deployment group create --resource-group ${{ parameters.resourceGroupName }} --template-file $(Pipeline.Workspace)/build/Infrastructure/main.bicep --parameters functionAppName=${{ parameters.functionAppName }} functionAppStorageAccountName=${{ parameters.storageAccountName }} cosmosDbAccountName=${{ parameters.cosmosDbAccountName }} logAnalyticsWorkspaceName=${{ parameters.logAnalyticsWorkspaceName }} location=${{ parameters.region }} > outputs.json

            - task: AzureFunctionApp@2
              displayName: '2. Azure functions app deploy'
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                appType: functionApp
                appName: ${{ parameters.functionAppName }}
                package: '$(Pipeline.Workspace)/build/App/${{ parameters.packageName }}'
                deploymentMethod: 'auto'